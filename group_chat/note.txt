
#1) user logs in: alert box to insert name

	// 	jquery $('#body').show()
		css #body { display: none }
		<div id="body"></div>

#2) have the server LISTEN for the event "got_new_user" when each event gets triggered, BROADCAST the event called "new_user" to the clients with the name of the new user attached to the event

// listen for an event
		app.io.route('got_a_new_user', function(req){
			// send to everyone (including the person that sent the request)
			app.io.broadcast('new_user', {new_user_name: req.data.name});
		});

	(4.2) we store the name/session_id of the new user in a variable/array/hash called users.  

		var users = {
			users[]
		};
		  // get the session_ids and store then then this hash table

	(4.3) to the person who sent this request, we EMIT an event called 'existing_users' with all the users data.

		app.io.route('got_a_new_user', function(req){
			// send to everyone (including the person that sent the request)
			app.io.broadcast('new_user', {new_user_name: req.data.name});
			req.io.emit('existing_users', users);
		});

5) Have the client LISTEN for an event called 'new_user' and when this event gets triggered, have the client render this info in jQuery somewhere in HTML.

	<script>
		var name = prompt("What is your name?");
		id = io.connect();
		io.emit('got_a_new_user', {name: name});

		io.on('new_user', function(data){
			// redner this is HTML
		})
	</script>

6) Have the server LISTEN for an event called 'disconnect', and when this occurs BROADCAST to all the clients an event 'disconnect_user' with some data (name of the disconnected user) (NOTE: we'll probably need to pass sessionID or something else to identify the user).


7) Have the cleint listen for an event 'disconnected_user' and when this gets triggered, have the client remove the proper jQuery box.